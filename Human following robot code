#include <NewPing.h>
#include <Servo.h>
#include <AFMotor.h>

#define LEFT A5              // Left IR sensor connected to analog pin A5 of Arduino Uno
#define RIGHT A1             // Right IR sensor connected to analog pin A1 of Arduino Uno
#define TRIGGER_PIN A2       // Trigger pin connected to analog pin A2 of Arduino Uno
#define ECHO_PIN A3          // Echo pin connected to analog pin A3 of Arduino Uno
#define MAX_DISTANCE 200     // Maximum ping distance

unsigned int distance = 0;   // Variable to store ultrasonic sensor distance
unsigned int rightValue = 0; // Variable to store Right IR sensor value
unsigned int leftValue = 0;  // Variable to store Left IR sensor value
int thresholdDistance = 300;  // Threshold distance in cm

NewPing sonar(TRIGGER_PIN, ECHO_PIN, MAX_DISTANCE);  // NewPing setup of pins and maximum distance

// Create motor objects
AF_DCMotor motor1(1, MOTOR12_1KHZ);
AF_DCMotor motor2(2, MOTOR12_1KHZ);
AF_DCMotor motor3(3, MOTOR34_1KHZ);
AF_DCMotor motor4(4, MOTOR34_1KHZ);

Servo myServo; // Create servo object to control the servo
int pos = 0;   // Variable to store the servo position

void setup() {
    Serial.begin(9600);       // Initialize serial communication at 9600 bits per second
    myServo.attach(10);       // Servo attached to pin 10 of Arduino UNO

    for (pos = 90; pos <= 180; pos += 1) {  // Sweep from 90 to 180 degrees
        myServo.write(pos);
        delay(15);
    }
    for (pos = 180; pos >= 0; pos -= 1) {   // Sweep from 180 to 0 degrees
        myServo.write(pos);
        delay(15);
    }
    for (pos = 0; pos <= 90; pos += 1) {    // Sweep from 0 to 90 degrees
        myServo.write(pos);
        delay(15);
    }

    pinMode(RIGHT, INPUT); // Set analog pin RIGHT as an input
    pinMode(LEFT, INPUT);  // Set analog pin LEFT as an input
    stop();                // Ensure motors are stopped initially
}

void loop() {
    delay(50);                        // Wait 50ms between pings
    distance = sonar.ping_cm();       // Send ping, get distance in cm, and store in 'distance' variable
    Serial.print("Distance: ");
    Serial.println(distance);         // Print the distance in serial monitor

    rightValue = !digitalRead(RIGHT); // Read the value from Right IR sensor
    leftValue = !digitalRead(LEFT);   // Read the value from Left IR sensor

    Serial.print("Right: ");
    Serial.println(rightValue);       // Print the right IR sensor value in serial monitor
    Serial.print("Left: ");
    Serial.println(leftValue);        // Print the left IR sensor value in serial monitor

    if ((distance > 1) && (distance < thresholdDistance)) {
        // Move Forward
        motor1.setSpeed(100);
        motor1.run(FORWARD);
        motor2.setSpeed(100);
        motor2.run(FORWARD);
        motor3.setSpeed(100);
        motor3.run(FORWARD);
        motor4.setSpeed(100);
        motor4.run(FORWARD);
    } else if ((rightValue == 1) && (leftValue == 0)) {
        // Turn Right
        motor1.setSpeed(100);
        motor1.run(FORWARD);
        motor2.setSpeed(100);
        motor2.run(FORWARD);
        motor3.setSpeed(100);
        motor3.run(BACKWARD);
        motor4.setSpeed(100);
        motor4.run(BACKWARD);
        delay(150);
    } else if ((rightValue == 0) && (leftValue == 1)) {
        // Turn Left
        motor1.setSpeed(100);
        motor1.run(BACKWARD);
        motor2.setSpeed(100);
        motor2.run(BACKWARD);
        motor3.setSpeed(100);
        motor3.run(FORWARD);
        motor4.setSpeed(100);
        motor4.run(FORWARD);
        delay(100);
    } else if (distance > thresholdDistance) {
        stop(); // Stop if no object is detected within range
    }
}

void stop() {
    // Stop all motors
    motor1.setSpeed(0);
    motor1.run(RELEASE);
    motor2.setSpeed(0);
    motor2.run(RELEASE);
    motor3.setSpeed(0);
    motor3.run(RELEASE);
    motor4.setSpeed(0);
    motor4.run(RELEASE);
}
    
